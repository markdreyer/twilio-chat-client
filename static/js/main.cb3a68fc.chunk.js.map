{"version":3,"sources":["assets/ChatChannel.module.css","assets/ChatChannelsItem.module.css","assets/ChatChannelsList.module.css","assets/MessageBubble.module.css","assets/twilio-mark-red.svg","components/WhatsappIcon.js","components/ChatIcon.js","components/MessageBubble.js","components/ChatMessages.js","components/ChatChannel.js","providers/Auth0Provider.js","components/LoginPage.jsx","components/ChannelsList.js","utils/class-name.js","components/HeaderItem.js","config/index.js","components/ChatApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","SvgTwilioMarkRed","_ref","svgRef","title","props","className","fill","viewBox","width","height","ref","ForwardRef","forwardRef","WhatsappIcon","PureComponent","render","ChatIcon","MessageBubble","Component","constructor","super","componentDidMount","a","state","message","getMember","type","setState","hasMedia","console","log","media","getContentUrl","then","url","mediaUrl","catch","e","mediaDownloadFailed","document","getElementById","sid","scrollIntoView","behavior","direction","itemStyle","styles","received_msg","divStyle","received_withd_msg","outgoing_msg","sent_msg","m","id","style","fontSize","component","author","medias","hasFailed","body","time_date","timestamp","toLocaleString","componentDidUpdate","prevProps","prevState","snapshot","Media","placeholder","onClick","Modal","info","centered","icon","okText","content","picture_container","src","alt","display","flexDirection","media_icon","zIndex","position","opacity","picture_preview","backgroundImage","ChatMessages","messages","map","identity","index","ChatChannel","loadMessagesFor","thisChannel","channelProxy","getMessages","messagePaginator","items","loadingState","err","error","boundChannels","has","newChannel","on","messageAdded","Set","oldProps","oldState","targetChannel","onMessageChanged","event","newMessage","value","sendMessage","preventDefault","onDrop","acceptedFiles","contentType","accept","getRootProps","getInputProps","isDragActive","top","drop","color","filter","flexBasis","flexGrow","flexShrink","overflowY","myIdentity","onSubmit","Group","compact","name","autoComplete","disabled","onChange","htmlType","newProps","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","Provider","getIdTokenClaims","p","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","Content","Layout","Form","create","form","getFieldDecorator","justify","align","span","offset","maxWidth","marginBottom","Item","block","Text","Typography","ChannelsList","channels","selectedChannelSid","onChannelClick","header","chatChannelsListStyles","bordered","dataSource","renderItem","item","activeChannel","channelItemClassName","chatChannelsItemStyles","Boolean","join","strong","friendlyName","HeaderItem","finalStyle","padding","domain","clientId","twilioAuthServer","Sider","Header","ChatApp","componentWillMount","context","statusString","getToken","logIn","logOut","token","chatReady","returnTo","chatClient","shutdown","auth0Response","bearerToken","__raw","fetch","config","method","headers","response","json","apiResponse","initChat","ChatClient","status","channel","it","selectedChannel","find","channelContent","email","alignItems","paddingRight","float","marginLeft","dot","theme","contextType","App","size","hostname","match","ReactDOM","client_id","redirect_uri","origin","targetUrl","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb3a68fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dropzone\":\"ChatChannel_Dropzone__3ExqR\",\"drop\":\"ChatChannel_drop__2AZOh\",\"active\":\"ChatChannel_active__3fCuu\",\"messages\":\"ChatChannel_messages__1eMTc\",\"Highlight\":\"ChatChannel_Highlight__X0kMT\",\"type-a-message\":\"ChatChannel_type-a-message__1p6ue\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"channel-item\":\"ChatChannelsItem_channel-item__391nN\",\"channel-item--active\":\"ChatChannelsItem_channel-item--active__2DguM\",\"channel-item-text\":\"ChatChannelsItem_channel-item-text__TyTYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat-channels-list\":\"ChatChannelsList_chat-channels-list__1kySY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"incoming_msg_img\":\"MessageBubble_incoming_msg_img__3qNhU\",\"received_msg\":\"MessageBubble_received_msg__1Odw4\",\"received_withd_msg\":\"MessageBubble_received_withd_msg__2yZLM\",\"time_date\":\"MessageBubble_time_date__3J1TD\",\"sent_msg\":\"MessageBubble_sent_msg__1p3uP\",\"outgoing_msg\":\"MessageBubble_outgoing_msg__1HSQX\",\"input_msg_write\":\"MessageBubble_input_msg_write__1pXRO\",\"image\":\"MessageBubble_image__2P-oa\",\"picture_preview\":\"MessageBubble_picture_preview__OisBa\",\"media_icon\":\"MessageBubble_media_icon__1LGgh\",\"picture_container\":\"MessageBubble_picture_container__i1X4B\",\"media\":\"MessageBubble_media__QDMhT\",\"placeholder\":\"MessageBubble_placeholder__3YPEt\",\"medias\":\"MessageBubble_medias__1EWsv\"};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15 0C6.7 0 0 6.7 0 15s6.7 15 15 15 15-6.7 15-15S23.3 0 15 0zm0 26C8.9 26 4 21.1 4 15S8.9 4 15 4s11 4.9 11 11-4.9 11-11 11zm6.8-14.7c0 1.7-1.4 3.1-3.1 3.1s-3.1-1.4-3.1-3.1 1.4-3.1 3.1-3.1 3.1 1.4 3.1 3.1zm0 7.4c0 1.7-1.4 3.1-3.1 3.1s-3.1-1.4-3.1-3.1c0-1.7 1.4-3.1 3.1-3.1s3.1 1.4 3.1 3.1zm-7.4 0c0 1.7-1.4 3.1-3.1 3.1s-3.1-1.4-3.1-3.1c0-1.7 1.4-3.1 3.1-3.1s3.1 1.4 3.1 3.1zm0-7.4c0 1.7-1.4 3.1-3.1 3.1S8.2 13 8.2 11.3s1.4-3.1 3.1-3.1 3.1 1.4 3.1 3.1z\"\n});\n\nconst SvgTwilioMarkRed = (_ref) => {\n  let svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"twilio-mark\",\n    fill: \"#F22F46\",\n    viewBox: \"0 0 30 30\",\n    width: 30,\n    height: 30,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgTwilioMarkRed, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/twilio-mark-red.4c36e327.svg\";\nexport { ForwardRef as ReactComponent };","import React, {PureComponent} from \"react\";\n\nexport default class WhatsappIcon extends PureComponent {\n  render = () => {\n    return (\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 90 90\">\n          <path fill=\"currentColor\" d={`M90,43.841c0,24.213-19.779,43.841-44.182,43.841c-7.747,0-15.025-1.98-21.357-5.455L0,90l7.975-23.522c-4.023-6.606-6.34-14.354-6.34-22.637C1.635,19.628,21.416,0,45.818,0C70.223,0,90,19.628,90,43.841z M45.818,6.982c-20.484,0-37.146,16.535-37.146,36.859c0,8.065,2.629,15.534,7.076,21.61L11.107,79.14l14.275-4.537c5.865,3.851,12.891,6.097,20.437,6.097c20.481,0,37.146-16.533,37.146-36.857S66.301,6.982,45.818,6.982z M68.129,53.938c-0.273-0.447-0.994-0.717-2.076-1.254c-1.084-0.537-6.41-3.138-7.4-3.495c-0.993-0.358-1.717-0.538-2.438,0.537c-0.721,1.076-2.797,3.495-3.43,4.212c-0.632,0.719-1.263,0.809-2.347,0.271c-1.082-0.537-4.571-1.673-8.708-5.333c-3.219-2.848-5.393-6.364-6.025-7.441c-0.631-1.075-0.066-1.656,0.475-2.191c0.488-0.482,1.084-1.255,1.625-1.882c0.543-0.628,0.723-1.075,1.082-1.793c0.363-0.717,0.182-1.344-0.09-1.883c-0.27-0.537-2.438-5.825-3.34-7.977c-0.902-2.15-1.803-1.792-2.436-1.792c-0.631,0-1.354-0.09-2.076-0.09c-0.722,0-1.896,0.269-2.889,1.344c-0.992,1.076-3.789,3.676-3.789,8.963c0,5.288,3.879,10.397,4.422,11.113c0.541,0.716,7.49,11.92,18.5,16.223C58.2,65.771,58.2,64.336,60.186,64.156c1.984-0.179,6.406-2.599,7.312-5.107C68.398,56.537,68.398,54.386,68.129,53.938z`}>\n          </path>\n        </svg>\n    );\n  }\n}","import React, {PureComponent} from \"react\";\n\nexport default class ChatIcon extends PureComponent {\n  render = () => {\n    return (\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 1024 1024\">\n          <path fill=\"currentColor\" d={`M161.69,935.7060000000001C161.69,935.7060000000001,161.69,681.344,161.69,681.344C161.69,681.344,0,681.344,0,681.344C0,681.344,0,88.50000000000011,0,88.50000000000011C0,88.50000000000011,1024,88.50000000000011,1024,88.50000000000011C1024,88.50000000000011,1024,681.344,1024,681.344C1024,681.344,504.986,681.344,504.986,681.344C504.986,681.344,161.69,935.7060000000001,161.69,935.7060000000001C161.69,935.7060000000001,161.69,935.7060000000001,161.69,935.7060000000001M53.914,627.4310000000002C53.914,627.4310000000002,215.603,627.4310000000002,215.603,627.4310000000002C215.603,627.4310000000002,215.603,828.4420000000001,215.603,828.4420000000001C215.603,828.4420000000001,485.069,627.4310000000002,485.069,627.4310000000002C485.069,627.4310000000002,970.086,627.4310000000002,970.086,627.4310000000002C970.086,627.4310000000002,970.086,142.36200000000008,970.086,142.36200000000008C970.086,142.36200000000008,53.914,142.36200000000008,53.914,142.36200000000008C53.914,142.36200000000008,53.914,627.4310000000002,53.914,627.4310000000002C53.914,627.4310000000002,53.914,627.4310000000002,53.914,627.4310000000002M161.69,384.8960000000002C161.69,447.1560000000002,229.069,486.0160000000001,282.931,454.9380000000001C307.968,440.4480000000001,323.379,413.77300000000014,323.379,384.8960000000002C323.379,322.6880000000001,256,283.7760000000002,202.086,314.9060000000002C177.101,329.34400000000016,161.69,356.0200000000001,161.69,384.8960000000002M431.155,384.8960000000002C431.155,447.1560000000002,498.534,486.0160000000001,552.448,454.9380000000001C577.434,440.4480000000001,592.845,413.77300000000014,592.845,384.8960000000002C592.845,322.6880000000001,525.466,283.7760000000002,471.603,314.9060000000002C446.566,329.34400000000016,431.155,356.0200000000001,431.155,384.8960000000002M700.621,384.8960000000002C700.621,447.1560000000002,768,486.0160000000001,821.914,454.9380000000001C846.899,440.4480000000001,862.31,413.77300000000014,862.31,384.8960000000002C862.31,322.6880000000001,794.931,283.7760000000002,741.069,314.9060000000002C716.032,329.34400000000016,700.621,356.0200000000001,700.621,384.8960000000002`}>\n          </path>\n        </svg>\n    );\n  }\n}","import React, { Component, PureComponent } from 'react';\nimport styles from '../assets/MessageBubble.module.css';\nimport PropTypes from \"prop-types\";\nimport { Spin, Modal, Icon } from \"antd\";\nimport WhatsappIcon from \"./WhatsappIcon\";\nimport ChatIcon from \"./ChatIcon\";\n\nclass MessageBubble extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hasMedia: this.props.message.type === \"media\",\n            mediaDownloadFailed: false,\n            mediaUrl: null\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({\n            ...this.state,\n            type: (await this.props.message.getMember()).type\n        });\n        if (this.state.hasMedia) {\n            console.log(\"Getting URL?!\");\n            this.props.message.media.getContentUrl()\n                .then(url => { console.log(\"HUZZAA\"); this.setState({ mediaUrl: url }) })\n                .catch(e => this.setState({ mediaDownloadFailed: true }));\n        }\n        document.getElementById(this.props.message.sid).scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        document.getElementById(this.props.message.sid).scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    render = () => {\n        const { itemStyle, divStyle } = this.props.direction === \"incoming\"\n            ? { itemStyle: styles.received_msg, divStyle: styles.received_withd_msg }\n            : { itemStyle: styles.outgoing_msg, divStyle: styles.sent_msg };\n\n        const m = this.props.message;\n        const type = this.state.type;\n\n        if (this.state.hasMedia) {\n            console.log('Message is media message');\n            // log media properties\n            console.log('Media properties', m.media);\n        }\n\n        return <li id={m.sid} className={itemStyle}>\n            <div className={divStyle}>\n                <div>\n                    <strong>\n                        {type === \"whatsapp\" &&\n                            <Icon\n                                style={{ fontSize: \"16px\" }}\n                                component={WhatsappIcon} />\n                        }\n                        {type === \"chat\" &&\n                            <Icon style={{ fontSize: \"16px\" }}\n                                component={ChatIcon} />}\n                        {type === \"sms\" && <Icon type={\"mobile\"} />}\n                        {` ${m.author}`}\n                    </strong>\n\n                    <br />\n                    <div className={styles.medias}>\n                        {this.state.hasMedia\n                            && <Media hasFailed={this.state.mediaDownloadFailed} url={this.state.mediaUrl} />}\n                    </div>\n                    {m.body}\n                </div>\n                <span className={styles.time_date}>{m.timestamp.toLocaleString()}</span>\n            </div>\n        </li>;\n    }\n}\n\nclass Media extends PureComponent {\n    render = () => {\n        const { hasFailed, url } = this.props;\n        return (\n            <div\n                className={`${styles.media}${!url ? \" \" + styles.placeholder : \"\"}`}\n                onClick={() => {\n                    Modal.info({\n                        centered: true,\n                        icon: null,\n                        okText: \"Close\",\n                        width: \"60%\",\n                        content: <div\n                            className={styles.picture_container}>\n                            <img style={{ width: \"100%\", height: \"100%\" }} src={url} alt='' />\n                        </div>\n                    })\n                }}>\n\n                {!url && !hasFailed && <Spin />}\n\n                {hasFailed &&\n                    <div\n                        style={{ display: \"flex\", flexDirection: \"column\" }}>\n                        <Icon type={\"warning\"} style={{ fontSize: \"5em\" }} />\n                        <p>Failed to load media</p>\n                    </div>\n                }\n\n                {!hasFailed && url &&\n                    <div className={styles.media_icon}>\n                        <div style={{ zIndex: 123, position: \"absolute\" }}>\n                            <Icon type={\"eye\"}\n                                style={{ fontSize: \"5em\", opacity: 0.3 }} />\n                        </div>\n                        <div\n                            className={styles.picture_preview}\n                            style={{ backgroundImage: `url(${url})`, zIndex: 122 }}>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nMedia.propTypes = {\n    hasFailed: PropTypes.bool.isRequired,\n    url: PropTypes.string\n};\n\nexport default MessageBubble;\n","import MessageBubble from \"./MessageBubble\";\nimport React, {PureComponent} from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ChatMessages extends PureComponent {\n  render = () => {\n    return (\n        <div id=\"messages\">\n          <ul>\n            { this.props.messages.map(m => {\n              if (m.author === this.props.identity)\n                return <MessageBubble key={m.index} direction=\"outgoing\" message={m} />;\n              else\n                return <MessageBubble key={m.index} direction=\"incoming\" message={m} />;\n            })\n            }\n          </ul>\n        </div>\n    );\n  }\n}\n\nChatMessages.propTypes = {\n  identity: PropTypes.string.isRequired,\n  messages: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default ChatMessages;","import React, { Component } from 'react';\nimport '../assets/Chat.css';\nimport Dropzone from 'react-dropzone';\nimport styles from '../assets/ChatChannel.module.css'\nimport { Button, Form, Icon, Input } from \"antd\";\nimport ChatMessages from \"./ChatMessages\";\nimport PropTypes from \"prop-types\";\n\nclass ChatChannel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newMessage: '',\n      channelProxy: props.channelProxy,\n      messages: [],\n      loadingState: 'initializing',\n      boundChannels: new Set()\n    };\n  }\n\n  loadMessagesFor = (thisChannel) => {\n    if (this.state.channelProxy === thisChannel) {\n      thisChannel.getMessages()\n        .then(messagePaginator => {\n          if (this.state.channelProxy === thisChannel) {\n            this.setState({ messages: messagePaginator.items, loadingState: 'ready' });\n          }\n        })\n        .catch(err => {\n          console.error(\"Couldn't fetch messages IMPLEMENT RETRY\", err);\n          this.setState({ loadingState: \"failed\" });\n        });\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.state.channelProxy) {\n      this.loadMessagesFor(this.state.channelProxy);\n\n      if (!this.state.boundChannels.has(this.state.channelProxy)) {\n        let newChannel = this.state.channelProxy;\n        newChannel.on('messageAdded', m => this.messageAdded(m, newChannel));\n        this.setState({ boundChannels: new Set([...this.state.boundChannels, newChannel]) });\n      }\n    }\n  }\n\n  componentDidUpdate = (oldProps, oldState) => {\n    if (this.state.channelProxy !== oldState.channelProxy) {\n      this.loadMessagesFor(this.state.channelProxy);\n\n      if (!this.state.boundChannels.has(this.state.channelProxy)) {\n        let newChannel = this.state.channelProxy;\n        newChannel.on('messageAdded', m => this.messageAdded(m, newChannel));\n        this.setState({ boundChannels: new Set([...this.state.boundChannels, newChannel]) });\n      }\n    }\n  };\n\n  static getDerivedStateFromProps(newProps, oldState) {\n    let logic = (oldState.loadingState === 'initializing') || oldState.channelProxy !== newProps.channelProxy;\n    if (logic) {\n      return { loadingState: 'loading messages', channelProxy: newProps.channelProxy };\n    } else {\n      return null;\n    }\n  }\n\n  messageAdded = (message, targetChannel) => {\n    if (targetChannel === this.state.channelProxy)\n      this.setState((prevState, props) => ({\n        messages: [...prevState.messages, message]\n      }));\n  };\n\n  onMessageChanged = event => {\n    this.setState({ newMessage: event.target.value });\n  };\n\n  sendMessage = event => {\n    event.preventDefault();\n    const message = this.state.newMessage;\n    this.setState({ newMessage: '' });\n    this.state.channelProxy.sendMessage(message);\n  };\n\n  onDrop = acceptedFiles => {\n    this.state.channelProxy.sendMessage({ contentType: acceptedFiles[0].type, media: acceptedFiles[0] });\n  };\n\n  render = () => {\n    return (\n      <Dropzone\n        onDrop={this.onDrop}\n        accept=\"image/*\">\n        {({ getRootProps, getInputProps, isDragActive }) => (\n          <div\n            {...getRootProps()}\n            onClick={() => {\n            }}\n            id=\"OpenChannel\"\n            style={{ position: \"relative\", top: 0 }}>\n\n            {isDragActive &&\n              <div className={styles.drop}>\n                <Icon type={\"cloud-upload\"}\n                  style={{ fontSize: \"5em\", color: \"#fefefe\" }} />\n                <h3 style={{ color: \"#fefefe\" }}>Release to Upload</h3>\n              </div>\n            }\n            <div\n              className={styles.messages}\n              style={{\n                filter: `blur(${isDragActive ? 4 : 0}px)`,\n              }}\n            >\n              <input id=\"files\" {...getInputProps()} />\n              <div style={{ flexBasis: \"100%\", flexGrow: 2, flexShrink: 1, overflowY: \"scroll\" }}>\n                <ChatMessages\n                  identity={this.props.myIdentity}\n                  messages={this.state.messages} />\n              </div>\n              <div>\n                <Form onSubmit={this.sendMessage}>\n                  <Input.Group compact={true} style={{\n                    width: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"row\"\n                  }}>\n                    <Input\n                      style={{ flexBasis: \"100%\" }}\n                      placeholder={\"Type your message here...\"}\n                      type={\"text\"}\n                      name={\"message\"}\n                      id={styles['type-a-message']}\n                      autoComplete={\"off\"}\n                      disabled={this.state.loadingState !== 'ready'}\n                      onChange={this.onMessageChanged}\n                      value={this.state.newMessage}\n                    />\n                    <Button icon=\"enter\" htmlType=\"submit\" type={\"submit\"} />\n                  </Input.Group>\n                </Form>\n              </div>\n            </div>\n          </div>\n        )}\n\n      </Dropzone>\n    );\n  }\n}\n\nChatChannel.propTypes = {\n  myIdentity: PropTypes.string.isRequired\n};\n\nexport default ChatChannel;","import React, { useState, useEffect, useContext } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n  children,\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  ...initOptions\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState();\r\n  const [user, setUser] = useState();\r\n  const [auth0Client, setAuth0] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client(initOptions);\r\n      setAuth0(auth0FromHook);\r\n\r\n      if (window.location.search.includes(\"code=\")) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback();\r\n        onRedirectCallback(appState);\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n      setIsAuthenticated(isAuthenticated);\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n  }, []);\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true);\r\n    try {\r\n      await auth0Client.loginWithPopup(params);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setPopupOpen(false);\r\n    }\r\n    const user = await auth0Client.getUser();\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true);\r\n    await auth0Client.handleRedirectCallback();\r\n    const user = await auth0Client.getUser();\r\n    setLoading(false);\r\n    setIsAuthenticated(true);\r\n    setUser(user);\r\n  };\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p)\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};\r\n","import React from 'react';\nimport { Layout, Button, Form, Row, Col, Card } from 'antd';\nimport { useAuth0 } from \"../providers/Auth0Provider\";\n\nconst { Content } = Layout;\n\nconst LoginPage = ({ form, onSubmit }) => {\n\n    const { loading, user, loginWithPopup, isAuthenticated } = useAuth0();\n    const { getFieldDecorator } = form;\n\n    return (\n        <Layout>\n            <Content style={{ height: '100vh' }}>\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{ height: '100%' }}>\n                    <Col span={12} offset={6}>\n                        <Card style={{ maxWidth: '404px' }}>\n                            <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ marginBottom: '30px' }}>\n                                <h3>Welcome, {user?.name || 'Guest'}</h3>\n                            </Row>\n                            <Row type=\"flex\" justify=\"center\" align=\"middle\" style={{ marginBottom: '30px' }}>\n                                Please sign in to start chatting.\n                            </Row>\n                            <Form >\n                                <Form.Item>\n                                    <Button onClick={() => onSubmit()} block type=\"primary\" htmlType=\"submit\">Sign in</Button>\n                                </Form.Item>\n                            </Form>\n                        </Card>\n                    </Col>\n                </Row>\n            </Content>\n        </Layout>\n    )\n}\n\nexport default Form.create({ name: 'login' })(LoginPage);\n","import React from 'react';\nimport { List, Typography } from \"antd\";\n\nimport chatChannelsListStyles from \"../assets/ChatChannelsList.module.css\";\nimport chatChannelsItemStyles from \"../assets/ChatChannelsItem.module.css\";\n\nimport { joinClassNames } from \"../utils/class-name\";\n\nconst { Text } = Typography;\n\nexport class ChannelsList extends React.Component {\n    render() {\n        const { channels, selectedChannelSid, onChannelClick } = this.props;\n\n        return (\n            <List\n                header={\"Open Conversations\"}\n                className={chatChannelsListStyles['chat-channels-list']}\n                bordered={true}\n                loading={channels.length === 0}\n                dataSource={channels}\n                renderItem={item => {\n                    const activeChannel = item.sid === selectedChannelSid;\n                    const channelItemClassName = joinClassNames([\n                        chatChannelsItemStyles['channel-item'],\n                        activeChannel && chatChannelsItemStyles['channel-item--active']\n                    ]);\n\n                    return (\n                        <List.Item\n                            key={item.sid}\n                            onClick={() => onChannelClick(item)}\n                            className={channelItemClassName}\n                        >\n                            <Text\n                                strong\n                                className={chatChannelsItemStyles['channel-item-text']}\n                            >\n                                {item.friendlyName || item.sid}\n                            </Text>\n                        </List.Item>\n                    )\n                }}\n            />\n        )\n    }\n}\n","export function joinClassNames(classNames) {\n    return classNames.filter(Boolean).join(' ');\n}\n","import React from 'react';\n\nexport const HeaderItem = ({ children, style }) => {\n    const finalStyle = { padding: '0 19px 0 19px', ...style};\n\n    return (\n        <div style={finalStyle}>\n            {children}\n        </div>\n    )\n};\n","export default {\r\n    auth0: {\r\n        domain: \"risasoft.us.auth0.com\",\r\n        clientId: \"xGABs4mZPhkwczTFdS2fjOi8QJXGsaVR\"\r\n    },\r\n    urls: {\r\n        twilioAuthServer: 'https://twilio-chat-api.azurewebsites.net/api/private'\r\n    }\r\n}","import React from \"react\";\nimport { Badge, Icon, Layout, Typography } from \"antd\";\nimport { Client as ChatClient } from \"twilio-chat\";\n\nimport \"../assets/Chat.css\";\nimport \"../assets/ChatChannelSection.css\";\nimport { ReactComponent as Logo } from \"../assets/twilio-mark-red.svg\";\n\nimport ChatChannel from \"./ChatChannel\";\nimport LoginPage from \"./LoginPage\";\nimport { ChannelsList } from \"./ChannelsList\";\nimport { HeaderItem } from \"./HeaderItem\";\nimport { Auth0Context } from \"../providers/Auth0Provider\";\nimport config from \"../config\";\n\nconst { Content, Sider, Header } = Layout;\nconst { Text } = Typography;\n\nclass ChatApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      token: null,\n      statusString: null,\n      chatReady: false,\n      channels: [],\n      selectedChannelSid: null,\n      newMessage: \"\"\n    };\n  }\n\n  static contextType = Auth0Context;\n\n  componentWillMount = async () => {\n    if (this.context.isAuthenticated) {\n      this.setState({ statusString: \"Fetching credentials…\" });\n      await this.getToken();\n    }\n  };\n\n  logIn = () => {\n    this.context.loginWithPopup({}).then(this.getToken)\n  };\n\n  logOut = event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.setState({\n      token: \"\",\n      chatReady: false,\n      messages: [],\n      newMessage: \"\",\n      channels: []\n    });\n\n    this.context.logout({ returnTo: window.location })\n    this.chatClient.shutdown();\n  };\n\n  getToken = async () => {\n    const auth0Response = await this.context.getIdTokenClaims()\n    const bearerToken = auth0Response?.__raw;\n\n    const apiResponse = await fetch(config.urls.twilioAuthServer, {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": `Bearer ${bearerToken}`\n      }\n    })\n      .then(response => response.json())\n\n\n    this.setState({ token: apiResponse.token }, this.initChat);\n  };\n\n  initChat = async () => {\n    window.chatClient = ChatClient;\n    this.chatClient = await ChatClient.create(this.state.token);\n    this.setState({ statusString: \"Connecting to Twilio…\" });\n\n    this.chatClient.on(\"connectionStateChanged\", state => {\n      if (state === \"connecting\")\n        this.setState({\n          statusString: \"Connecting to Twilio…\",\n          status: \"default\"\n        });\n      if (state === \"connected\") {\n        this.setState({\n          statusString: \"You are connected.\",\n          status: \"success\"\n        });\n      }\n      if (state === \"disconnecting\")\n        this.setState({\n          statusString: \"Disconnecting from Twilio…\",\n          chatReady: false,\n          status: \"default\"\n        });\n      if (state === \"disconnected\")\n        this.setState({\n          statusString: \"Disconnected.\",\n          chatReady: false,\n          status: \"warning\"\n        });\n      if (state === \"denied\")\n        this.setState({\n          statusString: \"Failed to connect.\",\n          chatReady: false,\n          status: \"error\"\n        });\n    });\n    this.chatClient.on(\"channelJoined\", channel => {\n      this.setState({ channels: [...this.state.channels, channel] });\n    });\n    this.chatClient.on(\"channelLeft\", thisChannel => {\n      this.setState({\n        channels: [...this.state.channels.filter(it => it !== thisChannel)]\n      });\n    });\n  };\n\n  render() {\n    const { channels, selectedChannelSid, status } = this.state;\n    const selectedChannel = channels.find(it => it.sid === selectedChannelSid);\n\n    let channelContent;\n    if (selectedChannel) {\n      channelContent = (\n        <ChatChannel\n          channelProxy={selectedChannel}\n          myIdentity={this.context.user.email}\n        />\n      );\n    } else if (status !== \"success\") {\n      channelContent = \"Loading your chat!\";\n    } else {\n      channelContent = \"\";\n    }\n\n    if (this.context.isAuthenticated) {\n      return (\n        <div className=\"chat-window-wrapper\">\n          <Layout className=\"chat-window-container\">\n            <Header\n              style={{ display: \"flex\", alignItems: \"center\", padding: 0 }}\n            >\n              <div\n                style={{\n                  maxWidth: \"250px\",\n                  width: \"100%\",\n                  display: \"flex\",\n                  alignItems: \"center\"\n                }}\n              >\n                <HeaderItem style={{ paddingRight: \"0\", display: \"flex\" }}>\n                  <Logo />\n                </HeaderItem>\n                <HeaderItem>\n                  <Text strong style={{ color: \"white\" }}>\n                    Conversations\n                  </Text>\n                </HeaderItem>\n              </div>\n              <div style={{ display: \"flex\", width: \"100%\" }}>\n                <HeaderItem>\n                  <Text strong style={{ color: \"white\" }}>\n                    {selectedChannel &&\n                      (selectedChannel.friendlyName || selectedChannel.sid)}\n                  </Text>\n                </HeaderItem>\n                <HeaderItem style={{ float: \"right\", marginLeft: \"auto\" }}>\n                  <span style={{ color: \"white\" }}>{` ${\n                    this.state.statusString\n                    }`}</span>\n                  <Badge\n                    dot={true}\n                    status={this.state.status}\n                    style={{ marginLeft: \"1em\" }}\n                  />\n                </HeaderItem>\n                <HeaderItem>\n                  <Icon\n                    type=\"poweroff\"\n                    onClick={this.logOut}\n                    style={{\n                      color: \"white\",\n                      fontSize: \"20px\",\n                      marginLeft: \"auto\"\n                    }}\n                  />\n                </HeaderItem>\n              </div>\n            </Header>\n            <Layout>\n              <Sider theme={\"light\"} width={250}>\n                <ChannelsList\n                  channels={channels}\n                  selectedChannelSid={selectedChannelSid}\n                  onChannelClick={item => {\n                    this.setState({ selectedChannelSid: item.sid });\n                  }}\n                />\n              </Sider>\n              <Content className=\"chat-channel-section\">\n                <div id=\"SelectedChannel\">{channelContent}</div>\n              </Content>\n            </Layout>\n          </Layout>\n        </div>\n      );\n    }\n\n    return <LoginPage onSubmit={this.logIn} />;\n  }\n}\n\nexport default ChatApp;\n","import React from 'react';\nimport ChatApp from './components/ChatApp';\nimport './assets/App.css';\nimport 'antd/dist/antd.css';\nimport Spin from \"antd/lib/spin\";\nimport { Layout, Row, Col } from 'antd';\nimport { useAuth0 } from \"./providers/Auth0Provider\";\n\nconst { Content } = Layout;\n\nconst App = () => {\n  const { loading } = useAuth0();\n\n  if (loading) {\n    return (\n\n      <Layout>\n        <Content style={{ height: '100vh' }}>\n          <Row type=\"flex\" justify=\"space-around\" align=\"middle\" style={{ height: '100%' }}>\n            <Col span={12} offset={6}>\n              <Spin size=\"large\" />\n            </Col>\n          </Row>\n        </Content>\n      </Layout>\n    );\n  }\n  return <ChatApp />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Auth0Provider } from \"./providers/Auth0Provider\";\nimport config from \"./config\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = appState => {\n    window.history.replaceState(\n        {},\n        document.title,\n        appState && appState.targetUrl\n            ? appState.targetUrl\n            : window.location.pathname\n    );\n};\n\nReactDOM.render(\n    <Auth0Provider\n        domain={config.auth0.domain}\n        client_id={config.auth0.clientId}\n        redirect_uri={window.location.origin}\n        onRedirectCallback={onRedirectCallback}\n    >\n        <App />\n    </Auth0Provider>\n\n\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}